@model ITApexWebsite.Models.securityProduct

@{
    ViewBag.Title = "securityProductAdd";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
@Scripts.Render("~/bundles/jquery")
@Scripts.Render("~/bundles/jqueryval")
<h2>securityProductAdd</h2>


@using (Html.BeginForm("securityProductAdd", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="form-horizontal">
            <h4>tblProduct</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.s_name, "Product Name", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.s_name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.s_name, "", new { @class = "text-danger" })
                </div>
            </div>

            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.s_img, "Upload Image", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.p_image, new { htmlAttributes = new { @class = "form-control" } })*@

                    <input type="file" name="file" id="file" style="width:100%;" />

                    @Html.ValidationMessageFor(model => model.s_img, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.s_desc, "Add product Description", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.s_desc, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.s_desc, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.s_quan, "Quantity", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.s_quan, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.s_quan, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.s_price, "Price", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.s_price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.s_price, "", new { @class = "text-danger" })
                </div>
            </div>
            <br />


            <div class="form-group">
                @Html.LabelFor(model => model.isFeatured, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isFeatured, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.isFeatured, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <br />
            <div class="form-group">
                @Html.LabelFor(model => model.isActice, "Active", htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isActice, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.isActice, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @Html.HiddenFor(model => model.isDelete)
            <br />
            <br />
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Save" class="btn btn-primary" />
                </div>
            </div>
        </div>
    </div>
}


<div>
    @Html.ActionLink("Back to Product List", "Index")
</div>
<script src="~/Scripts/jquery.validate-vsdoc.js"></script>
<script src="~/Scripts/jquery.validate.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>